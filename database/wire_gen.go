// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package database

import (
	"github.com/google/wire"
	"github.com/goropikari/simpledbgo/buffer"
	"github.com/goropikari/simpledbgo/domain"
	"github.com/goropikari/simpledbgo/file"
	"github.com/goropikari/simpledbgo/index/hash"
	"github.com/goropikari/simpledbgo/log"
	"github.com/goropikari/simpledbgo/metadata"
	"github.com/goropikari/simpledbgo/plan"
	"github.com/goropikari/simpledbgo/tx"
)

// Injectors from wire.go:

func InitializeDB() (*DB, error) {
	managerConfig := file.NewManagerConfig()
	manager, err := file.NewManager(managerConfig)
	if err != nil {
		return nil, err
	}
	logManagerConfig := log.NewManagerConfig()
	logManager, err := log.NewManager(manager, logManagerConfig)
	if err != nil {
		return nil, err
	}
	config := buffer.NewConfig()
	bufferManager, err := buffer.NewManager(manager, logManager, config)
	if err != nil {
		return nil, err
	}
	lockTableConfig := tx.NewLockTableConfig()
	lockTable := tx.NewLockTable(lockTableConfig)
	numberGenerator := tx.NewNumberGenerator()
	indexFactory := hash.NewIndexFactory()
	searchCostCalculator := hash.NewSearchCostCalculator()
	indexDriver := domain.NewIndexDriver(indexFactory, searchCostCalculator)
	metadataManager, err := metadata.NewManager(indexDriver, manager, logManager, bufferManager, lockTable, numberGenerator)
	if err != nil {
		return nil, err
	}
	basicQueryPlanner := plan.NewBasicQueryPlanner(metadataManager)
	basicUpdatePlanner := plan.NewBasicUpdatePlanner(metadataManager)
	executor := plan.NewExecutor(basicQueryPlanner, basicUpdatePlanner)
	db := NewDB(manager, logManager, bufferManager, lockTable, numberGenerator, executor)
	return db, nil
}

// wire.go:

var Set = wire.NewSet(file.NewManagerConfig, file.NewManager, wire.Bind(new(domain.FileManager), new(*file.Manager)), log.NewManagerConfig, log.NewManager, wire.Bind(new(domain.LogManager), new(*log.Manager)), buffer.NewConfig, buffer.NewManager, wire.Bind(new(domain.BufferPoolManager), new(*buffer.Manager)), tx.NewLockTableConfig, tx.NewLockTable, tx.NewNumberGenerator, wire.Bind(new(domain.TxNumberGenerator), new(*tx.NumberGenerator)), hash.NewIndexFactory, wire.Bind(new(domain.IndexFactory), new(*hash.IndexFactory)), hash.NewSearchCostCalculator, wire.Bind(new(domain.SearchCostCalculator), new(*hash.SearchCostCalculator)), domain.NewIndexDriver, metadata.NewManager, wire.Bind(new(domain.MetadataManager), new(*metadata.Manager)), plan.NewBasicQueryPlanner, wire.Bind(new(domain.QueryPlanner), new(*plan.BasicQueryPlanner)), plan.NewBasicUpdatePlanner, wire.Bind(new(domain.UpdateExecutor), new(*plan.BasicUpdatePlanner)), plan.NewExecutor, NewDB)
