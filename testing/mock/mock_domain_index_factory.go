// Code generated by MockGen. DO NOT EDIT.
// Source: index_factory.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/goropikari/simpledbgo/domain"
)

// MockIndexFactory is a mock of IndexFactory interface.
type MockIndexFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIndexFactoryMockRecorder
}

// MockIndexFactoryMockRecorder is the mock recorder for MockIndexFactory.
type MockIndexFactoryMockRecorder struct {
	mock *MockIndexFactory
}

// NewMockIndexFactory creates a new mock instance.
func NewMockIndexFactory(ctrl *gomock.Controller) *MockIndexFactory {
	mock := &MockIndexFactory{ctrl: ctrl}
	mock.recorder = &MockIndexFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexFactory) EXPECT() *MockIndexFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIndexFactory) Create() (domain.IndexGenerator, domain.SearchCostCalculator) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(domain.IndexGenerator)
	ret1, _ := ret[1].(domain.SearchCostCalculator)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIndexFactoryMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIndexFactory)(nil).Create))
}
