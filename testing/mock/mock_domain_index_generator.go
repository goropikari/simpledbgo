// Code generated by MockGen. DO NOT EDIT.
// Source: index_generator.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/goropikari/simpledbgo/domain"
)

// MockIndexGenerator is a mock of IndexGenerator interface.
type MockIndexGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockIndexGeneratorMockRecorder
}

// MockIndexGeneratorMockRecorder is the mock recorder for MockIndexGenerator.
type MockIndexGeneratorMockRecorder struct {
	mock *MockIndexGenerator
}

// NewMockIndexGenerator creates a new mock instance.
func NewMockIndexGenerator(ctrl *gomock.Controller) *MockIndexGenerator {
	mock := &MockIndexGenerator{ctrl: ctrl}
	mock.recorder = &MockIndexGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexGenerator) EXPECT() *MockIndexGeneratorMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIndexGenerator) Create(arg0 domain.Transaction, arg1 domain.IndexName, arg2 *domain.Layout) domain.Indexer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(domain.Indexer)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIndexGeneratorMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIndexGenerator)(nil).Create), arg0, arg1, arg2)
}
