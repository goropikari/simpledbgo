// Code generated by MockGen. DO NOT EDIT.
// Source: log_manager.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLogManager is a mock of LogManager interface.
type MockLogManager struct {
	ctrl     *gomock.Controller
	recorder *MockLogManagerMockRecorder
}

// MockLogManagerMockRecorder is the mock recorder for MockLogManager.
type MockLogManagerMockRecorder struct {
	mock *MockLogManager
}

// NewMockLogManager creates a new mock instance.
func NewMockLogManager(ctrl *gomock.Controller) *MockLogManager {
	mock := &MockLogManager{ctrl: ctrl}
	mock.recorder = &MockLogManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogManager) EXPECT() *MockLogManagerMockRecorder {
	return m.recorder
}

// AppendRecord mocks base method.
func (m *MockLogManager) AppendRecord(record []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AppendRecord", record)
	ret0, _ := ret[0].(error)
	return ret0
}

// AppendRecord indicates an expected call of AppendRecord.
func (mr *MockLogManagerMockRecorder) AppendRecord(record interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendRecord", reflect.TypeOf((*MockLogManager)(nil).AppendRecord), record)
}

// FlushByLSN mocks base method.
func (m *MockLogManager) FlushByLSN(lsn int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlushByLSN", lsn)
	ret0, _ := ret[0].(error)
	return ret0
}

// FlushByLSN indicates an expected call of FlushByLSN.
func (mr *MockLogManagerMockRecorder) FlushByLSN(lsn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlushByLSN", reflect.TypeOf((*MockLogManager)(nil).FlushByLSN), lsn)
}

// IsZero mocks base method.
func (m *MockLogManager) IsZero() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsZero")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsZero indicates an expected call of IsZero.
func (mr *MockLogManagerMockRecorder) IsZero() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsZero", reflect.TypeOf((*MockLogManager)(nil).IsZero))
}

// Iterator mocks base method.
func (m *MockLogManager) Iterator() (<-chan []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Iterator")
	ret0, _ := ret[0].(<-chan []byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Iterator indicates an expected call of Iterator.
func (mr *MockLogManagerMockRecorder) Iterator() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Iterator", reflect.TypeOf((*MockLogManager)(nil).Iterator))
}
